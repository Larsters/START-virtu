{
    "openapi": "3.0.1",
    "info": {
      "title": "Production API",
      "description": "A simple swagger api doc",
      "contact": {
        "name": "Test User",
        "email": "test.user@syngenta.com"
      },
      "license": {
        "name": "License"
      },
      "version": "v1.0"
    },
    "paths": {
      "/api/AgronomicsDecisionRecommendation/Metadata": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "get spray measure metadata",
          "parameters": [
            {
              "name": "measureType",
              "in": "query",
              "description": "the text of the measure type, such as \"SprayingType\"",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "label",
              "in": "query",
              "description": "contains the measure label for which we need to query, separated by delimiter(;)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "description",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/SprayWindowRecommendation": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "spray window recommendation",
          "parameters": [
            {
              "name": "wkt",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well-known text, such as: geometrycollection(point(7 42), point(8 20)) or point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "the value of the start date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "the value of the end date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "sprayingType",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "top",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 20
              }
            },
            {
              "name": "format",
              "in": "query",
              "description": "",
              "schema": {
                "enum": [
                  "json",
                  "csv"
                ],
                "type": "string",
                "default": "json"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/PlantingWindowRecommendation": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "API for calculating the Planting windows",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "cropType",
              "in": "query",
              "description": "list of stress Id which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            },
            {
              "name": "soilType",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/FrostDateRecommendation": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "API for calculating the Frost Date",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startYear",
              "in": "query",
              "description": "start year of the Frost calculation",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "endYear",
              "in": "query",
              "description": "end year of the Frost calculation",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/DroneFlightRecommendation": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "API for calculating the Drone flight",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "end date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "droneType",
              "in": "query",
              "description": "Type of drone models",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/DroneFlightdays": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "API for calculating the Drone flight",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "droneType",
              "in": "query",
              "description": "Type of drone models",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/HydricStressRecommendation": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "Hydric Stress Recommendation",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "end date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "waterAvailabilty",
              "in": "query",
              "description": "name of the Historical Database which you want to use, by default it uses NEMSAUTO",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/CornYieldRisk": {
        "post": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "this function used to calculate for CornYieldRisk",
          "parameters": [
            {
              "name": "riskType",
              "in": "query",
              "description": "risk type",
              "required": true,
              "schema": {
                "enum": [
                  "SoilTemperatureAtEmergencePeriod",
                  "AirTemperatureAtEmergencePeriod",
                  "SoilWaterContentDuringRootDevelopment",
                  "ParAtV6",
                  "HeatStressAtFlowering"
                ],
                "type": "string"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date, date format as 'dd/MM/yyyy'",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "end date, date format as 'dd/MM/yyyy'",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "thresholdValue",
              "in": "query",
              "description": "threshold value",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "minConsecutiveDays",
              "in": "query",
              "description": "the min value of consecutive days",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "maxConsecutiveDays",
              "in": "query",
              "description": "the max value of consecutive days",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "minThresholdValue",
              "in": "query",
              "description": "the min value of the threshold value",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "maxThresholdValue",
              "in": "query",
              "description": "the min value of the threshold value",
              "schema": {
                "type": "number",
                "format": "double"
              }
            }
          ],
          "requestBody": {
            "description": "the list of location",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                }
              },
              "application/*+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                }
              },
              "application/*+xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationModel"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/PhytophagyStressRisk": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "cropType",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/AgronomicsDecisionRecommendation/PhytophagyFrostRisk": {
        "get": {
          "tags": [
            "AgronomicsDecisionRecommendation"
          ],
          "summary": "",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "cropType",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChartsDotDataModel"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Alert/ForecastAlert": {
        "get": {
          "tags": [
            "Alert"
          ],
          "summary": "API for calculating the Forecast Alerts",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of stress Id which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Alert/StressAlert": {
        "get": {
          "tags": [
            "Alert"
          ],
          "summary": "API for calculating the stress Alerts",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "end date of the stress calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of stress Id which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Alert/SevereWeatherAlert": {
        "get": {
          "tags": [
            "Alert"
          ],
          "summary": "Get severe weather alert",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "end date",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Alert/FrostAlert": {
        "get": {
          "tags": [
            "Alert"
          ],
          "summary": "Frost Alert",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "end date",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Alert/EmailSubscription": {
        "post": {
          "tags": [
            "Alert"
          ],
          "summary": "Create new subscription from outside for AgriAlert",
          "requestBody": {
            "description": "new subscription data",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/AgriAlertExternalSubscriptionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgriAlertExternalSubscriptionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgriAlertExternalSubscriptionModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/AgriAlertExternalSubscriptionModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AgriAlertExternalSubscriptionModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AgriAlertExternalSubscriptionModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/AgriAlertExternalSubscriptionModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AgriAlertExternalSubscriptionModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Authorized/GetSessionToken": {
        "get": {
          "tags": [
            "Authorized"
          ],
          "summary": "get session token",
          "parameters": [
            {
              "name": "accessKey",
              "in": "query",
              "description": "the text of the access key",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "secretKey",
              "in": "query",
              "description": "the text of the secret key",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "expMins",
              "in": "query",
              "description": "the number of the expiration minutes",
              "schema": {
                "type": "number",
                "format": "double",
                "default": 1440
              }
            },
            {
              "name": "bearerToken",
              "in": "query",
              "description": "if it's false, then return api key; otherwise, return bearer token",
              "schema": {
                "type": "boolean",
                "default": true
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Authorized/GetSignInUrl": {
        "get": {
          "tags": [
            "Authorized"
          ],
          "summary": "get sso signin url",
          "parameters": [
            {
              "name": "application",
              "in": "query",
              "description": "the text of the application name",
              "required": true,
              "schema": {
                "enum": [
                  "Simulation",
                  "Portal"
                ],
                "type": "string",
                "description": "ApplicationEnum"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Authorized/GetAccessToken": {
        "post": {
          "tags": [
            "Authorized"
          ],
          "summary": "get access token",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "application",
                    "authorizedCode"
                  ],
                  "type": "object",
                  "properties": {
                    "application": {
                      "enum": [
                        "Simulation",
                        "Portal"
                      ],
                      "type": "string",
                      "description": "ApplicationEnum"
                    },
                    "authorizedCode": {
                      "type": "string"
                    },
                    "codeVerifier": {
                      "type": "string"
                    }
                  }
                },
                "encoding": {
                  "application": {
                    "style": "form"
                  },
                  "authorizedCode": {
                    "style": "form"
                  },
                  "codeVerifier": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Authorized/GetAuthorizedUserInfo": {
        "post": {
          "tags": [
            "Authorized"
          ],
          "summary": "get Graph User Info",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "application",
                    "authorizedCode"
                  ],
                  "type": "object",
                  "properties": {
                    "application": {
                      "enum": [
                        "Simulation",
                        "Portal"
                      ],
                      "type": "string",
                      "description": "ApplicationEnum"
                    },
                    "authorizedCode": {
                      "type": "string"
                    },
                    "codeVerifier": {
                      "type": "string"
                    },
                    "logActivity": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                },
                "encoding": {
                  "application": {
                    "style": "form"
                  },
                  "authorizedCode": {
                    "style": "form"
                  },
                  "codeVerifier": {
                    "style": "form"
                  },
                  "logActivity": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Common/GetValidCoordinatesInBoundaries": {
        "post": {
          "tags": [
            "Common"
          ],
          "summary": "Get valid coordinates in boundaries",
          "requestBody": {
            "description": "the model of the request",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaCoordinateRequestModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaCoordinateRequestModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaCoordinateRequestModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/AreaCoordinateRequestModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AreaCoordinateRequestModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AreaCoordinateRequestModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/AreaCoordinateRequestModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AreaCoordinateRequestModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CoordinateModel"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CoordinateModel"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CoordinateModel"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CoordinateModel"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CoordinateModel"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Cryptography/Encrypt": {
        "get": {
          "tags": [
            "Cryptography"
          ],
          "summary": "encrypt",
          "parameters": [
            {
              "name": "encryptionText",
              "in": "query",
              "description": "text which needs to be encrypted",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "key",
              "in": "query",
              "description": "key used for ecryption",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "media",
              "in": "query",
              "description": "media used for identification",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Cryptography/Decrypt": {
        "get": {
          "tags": [
            "Cryptography"
          ],
          "summary": "decrypt",
          "parameters": [
            {
              "name": "encryptedText",
              "in": "query",
              "description": "text which needs to be decrypted",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "key",
              "in": "query",
              "description": "key used for decryption",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "media",
              "in": "query",
              "description": "media used for identification",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Cryptography/GetSecurityKey": {
        "get": {
          "tags": [
            "Cryptography"
          ],
          "summary": "get security key",
          "parameters": [
            {
              "name": "tokenIdentification",
              "in": "query",
              "description": "token identification which will be part of the encrption",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userId",
              "in": "query",
              "description": "additional information, such as UserId for the encryption",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "additionalInfo",
              "in": "query",
              "description": "additional information, such as query string for encryption",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "key",
              "in": "query",
              "description": "key used for decryption",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "media",
              "in": "query",
              "description": "media used for identification",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Cryptography/DecryptSecurityKey": {
        "get": {
          "tags": [
            "Cryptography"
          ],
          "summary": "decrypt security key",
          "parameters": [
            {
              "name": "encryptedText",
              "in": "query",
              "description": "text which needs to be decrypted",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "key",
              "in": "query",
              "description": "key used for decryption",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "media",
              "in": "query",
              "description": "media used for identification",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/Metadata": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for Metadata information i.e. ModelId, ModelName, list of disease parameters",
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/PotatoRisk": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Potato Disease Risk",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "relativeHumidity",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 85
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/TurfRisk": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Turf Risk",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/PotatoRisk_V2": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Potato Disease Risk V2",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/CerealRisk": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Cereal Risk",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/PepperRisk": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Pepper Risk",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/GrapesRisk": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Grapes Risk",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/AppleRisk": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Apple Risk",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/CornRisk": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Maize/Corn Risk",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/DiseaseRisk/CornRisk_V2": {
        "get": {
          "tags": [
            "DiseaseRisk"
          ],
          "summary": "API for calculating the Maize/Corn Risk for trial corn",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "End date of the Risk calculation",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "modelId",
              "in": "query",
              "description": "list of ModleId which are separated by semicolon(;)",
              "required": true,
              "schema": {
                "type": "string",
                "default": "TarSpot"
              }
            },
            {
              "name": "datasetLabel",
              "in": "query",
              "description": "name of the Historical Database which you want to use",
              "schema": {
                "type": "string",
                "default": "NEMSAUTO"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/Metadata": {
        "get": {
          "tags": [
            "Forecast"
          ],
          "summary": "get forecast metadata",
          "parameters": [
            {
              "name": "measureType",
              "in": "query",
              "description": "the text of the measure type, such as \"Hourly\", \"Daily\", \"8Hourly\" or \"Nowcast\"",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "label",
              "in": "query",
              "description": "contains the measure label for which we need to query, separated by delimiter(;)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "description",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/CumulativeForecast": {
        "get": {
          "tags": [
            "Forecast"
          ],
          "summary": "",
          "parameters": [
            {
              "name": "locationAsWKT",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "start date of the duration",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "end date of the duration",
              "required": true,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "variable",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/ShortRangeForecastHourly": {
        "get": {
          "tags": [
            "Forecast"
          ],
          "summary": "get forecast hourly data",
          "parameters": [
            {
              "name": "wkt",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well-known text, such as: geometrycollection(point(7 42), point(8 20)) or point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "the value of the start date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "the value of the end date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "supplier",
              "in": "query",
              "description": "the name of the supplier",
              "schema": {
                "enum": [
                  "Meteoblue",
                  "Climatempo",
                  "Iteris"
                ],
                "type": "string",
                "default": "Meteoblue"
              }
            },
            {
              "name": "measureLabel",
              "in": "query",
              "description": "contains the measure label for which we need to query, separated by delimiter(;)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "top",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 20
              }
            },
            {
              "name": "format",
              "in": "query",
              "description": "",
              "schema": {
                "enum": [
                  "json",
                  "csv"
                ],
                "type": "string",
                "default": "json"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/ShortRangeForecastDaily": {
        "get": {
          "tags": [
            "Forecast"
          ],
          "summary": "get forecast daily data",
          "parameters": [
            {
              "name": "wkt",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well-known text, such as: geometrycollection(point(7 42), point(8 20)) or point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "the value of the start date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "the value of the end date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "supplier",
              "in": "query",
              "description": "the name of the supplier",
              "schema": {
                "enum": [
                  "Meteoblue",
                  "Climatempo",
                  "ClimatempoAgro",
                  "Iteris",
                  "WeatherMeasures"
                ],
                "type": "string",
                "default": "Meteoblue"
              }
            },
            {
              "name": "measureLabel",
              "in": "query",
              "description": "contains the measure label for which we need to query, separated by delimiter(;)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "top",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 20
              }
            },
            {
              "name": "format",
              "in": "query",
              "description": "",
              "schema": {
                "enum": [
                  "json",
                  "csv"
                ],
                "type": "string",
                "default": "json"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/ShortRangeForecast8Hourly": {
        "get": {
          "tags": [
            "Forecast"
          ],
          "summary": "get forecast 8 hourly data",
          "parameters": [
            {
              "name": "wkt",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well-known text, such as: geometrycollection(point(7 42), point(8 20)) or point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "the value of the start date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "the value of the end date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "supplier",
              "in": "query",
              "description": "the name of the supplier",
              "schema": {
                "enum": [
                  "Meteoblue",
                  "Climatempo",
                  "Iteris"
                ],
                "type": "string",
                "default": "Meteoblue"
              }
            },
            {
              "name": "measureLabel",
              "in": "query",
              "description": "contains the measure label for which we need to query, separated by delimiter(;)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "top",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 20
              }
            },
            {
              "name": "format",
              "in": "query",
              "description": "",
              "schema": {
                "enum": [
                  "json",
                  "csv"
                ],
                "type": "string",
                "default": "json"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/Nowcast": {
        "get": {
          "tags": [
            "Forecast"
          ],
          "summary": "get nowcast data",
          "parameters": [
            {
              "name": "wkt",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well-known text, such as: geometrycollection(point(7 42), point(8 20)) or point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "the value of the start date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "the value of the end date",
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "supplier",
              "in": "query",
              "description": "the name of the supplier",
              "schema": {
                "enum": [
                  "Meteoblue",
                  "Iteris"
                ],
                "type": "string",
                "default": "Meteoblue"
              }
            },
            {
              "name": "measureLabel",
              "in": "query",
              "description": "contains the measure label for which we need to query, separated by delimiter(;)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "top",
              "in": "query",
              "description": "",
              "schema": {
                "type": "integer",
                "format": "int32",
                "default": 20
              }
            },
            {
              "name": "format",
              "in": "query",
              "description": "",
              "schema": {
                "enum": [
                  "json",
                  "csv"
                ],
                "type": "string",
                "default": "json"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/PolygonRequest": {
        "post": {
          "tags": [
            "Forecast"
          ],
          "summary": "raise a background request to collect data of coordinates which exists in polygon area",
          "requestBody": {
            "description": "the request model",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/PolygonRequestInputModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolygonRequestInputModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolygonRequestInputModel"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/PolygonRequestInputModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolygonRequestInputModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolygonRequestInputModel"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/PolygonRequestInputModel"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolygonRequestInputModel"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/JobStatus/{guid}": {
        "get": {
          "tags": [
            "Forecast"
          ],
          "summary": "get the status of the background request",
          "parameters": [
            {
              "name": "guid",
              "in": "path",
              "description": "the guid of the background request",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Forecast/JobResult/{guid}": {
        "get": {
          "tags": [
            "Forecast"
          ],
          "summary": "download data if job completed.",
          "parameters": [
            {
              "name": "guid",
              "in": "path",
              "description": "the guid of the background request",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/GenericRecommendation/DatasetAnalysisRecommendation": {
        "get": {
          "tags": [
            "GenericRecommendation"
          ],
          "summary": "Get Recommendations filter by criteria: wkt or longitude, latitude and variable",
          "parameters": [
            {
              "name": "wkt",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe well known text, only works for one point, such as: point(7 42); format: point(lng lat)",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "latitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the latitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "<span id=\"red-span\">*Either wkt or latitude and longitude</span><br/>\r\nthe number of the longitude",
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "variable",
              "in": "query",
              "description": "variable is optional.",
              "schema": {
                "enum": [
                  "Temperature",
                  "Precipitation",
                  "ShortwaveRadiation",
                  "RelativeHumidity",
                  "WindSpeed"
                ],
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "return recommendation list.",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecommendationItem"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecommendationItem"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecommendationItem"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecommendationItem"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/RecommendationItem"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "return error message.",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/HyperLocalWeather/api/Metadata": {
        "post": {
          "tags": [
            "HyperLocalWeather"
          ],
          "summary": "get metadata info",
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataPayloadModel"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/HyperLocalWeather/api/Data": {
        "post": {
          "tags": [
            "HyperLocalWeather"
          ],
          "summary": "",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPayloadModel"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/HyperLocalWeather/mgmt/Perform/{operation}": {
        "post": {
          "tags": [
            "HyperLocalWeather"
          ],
          "summary": "Perform kinds of operation",
          "parameters": [
            {
              "name": "operation",
              "in": "path",
              "description": "",
              "required": true,
              "schema": {
                "enum": [
                  "CopyStationMaster",
                  "InsertFakeRecord",
                  "OpenQuery",
                  "HandleScheduledQuery",
                  "UpdateStationLocation",
                  "UpdateStationSecurityGroup",
                  "UpdateSencropAvizioMetadata",
                  "ShowMissedVariableColumns",
                  "ImportWeatherMeasuresHistoric",
                  "ImportWeatherMeasuresForecast",
                  "ImportDavisHistoric",
                  "ImportPWSProviderHistoric",
                  "CountriesMissedRegion",
                  "RefreshRegionCountriesMapping"
                ],
                "type": "string",
                "default": "CopyStationMaster"
              }
            }
          ],
          "requestBody": {
            "description": "<div style=\"font-weight:bold;\">1. CopyStationMaster:</div>\r\n<pre>&#9;a) copy stations from postgre to timestream</pre>\r\n<pre>&#9;&#9;{ \"lastModifiedTime\": \"2024-01-01\", \"stations\": null, \"includeSuppliers\": null, \"excludeSuppliers\": null }</pre>\r\n<pre>&#9;b) set stations 'is_deleted' value to true in timestream</pre>\r\n<pre>&#9;&#9;{ \"stations\": [\"Davis-12345\"], \"operation\": \"deactive\" }</pre>\r\n<div style=\"font-weight:bold;\">2. InsertFakeRecord:</div>\r\n<pre>&#9;a) insert a fake record to RawData table</pre>\r\n<pre>&#9;&#9;{ \"variables\": [\"E_RAINFALL_SUM\", \"E_WIND_SPEED_AVG\"] }</pre>\r\n<pre>&#9;b) insert a fake record to MissingStations table</pre>\r\n<pre>&#9;&#9;{ \"InsertFakeMissingStation\": true }</pre>\r\n<div style=\"font-weight:bold;\">3. OpenQuery:</div>\r\n<pre>&#9;a) write query string</pre>\r\n<pre>&#9;&#9;show columns from \"weather-stations-timestream-database\".\"MainData\"</pre>\r\n<div style=\"font-weight:bold;\">4. HandleScheduledQuery:</div>\r\n<pre>&#9;a) list all scheduled queries</pre>\r\n<pre>&#9;&#9;{ }</pre>\r\n<pre>&#9;b) get scheduled query by name</pre>\r\n<pre>&#9;&#9;{ \"name\": \"weather-stations-rawtomain-48hours\" }</pre>\r\n<pre>&#9;c) update state of scheduled query, state value can be ENABLED, DISABLED</pre>\r\n<pre>&#9;&#9;{ \"name\": \"weather-stations-rawtomain-48hours\", \"state\": \"DISABLED\" }</pre>\r\n<pre>&#9;d) excute scheduled query once</pre>\r\n<pre>&#9;&#9;{ \"name\": \"weather-stations-rawtomain-48hours\", \"invocationTime\": \"2024-01-01 00:00:00\" }</pre>\r\n<div style=\"font-weight:bold;\">5. UpdateStationLocation:</div>\r\n<pre>&#9;a) batch update missed stations info</pre>\r\n<pre>&#9;&#9;{ \"limitSize\": 100 }</pre>\r\n<div style=\"font-weight:bold;\">6. UpdateStationSecurityGroup:</div>\r\n<pre>&#9;a) update security group for all station</pre>\r\n<pre>&#9;&#9;{ }</pre>\r\n<div style=\"font-weight:bold;\">7. UpdateSencropAvizioMetadata:</div>\r\n<pre>&#9;a) update metedata for Sencrop(Avizio) stations</pre>\r\n<pre>&#9;&#9;{ \"lastModifiedTime\": \"2024-01-01\" }</pre>\r\n<div style=\"font-weight:bold;\">8. ShowMissedVariableColumns:</div>\r\n<pre>&#9;a) show missed variable columns</pre>\r\n<pre>&#9;&#9;{ }</pre>\r\n<div style=\"font-weight:bold;\">9. ImportWeatherMeasuresHistoric:</div>\r\n<pre>&#9;a) import historic data for WeatherMeasures stations</pre>\r\n<pre>&#9;&#9;{ \"Active\": true, \"PointIds\": null, \"Date\": \"2024-05-01\" }</pre>\r\n<div style=\"font-weight:bold;\">10. ImportWeatherMeasuresForecast:</div>\r\n<pre>&#9;a) import forecast data for WeatherMeasures stations</pre>\r\n<pre>&#9;&#9;{ \"Dates\": [ \"2024-01-01\" ], \"PointIds\": null }</pre>\r\n<div style=\"font-weight:bold;\">11. ImportDavisHistoric:</div>\r\n<pre>&#9;a) import historic data for particular Davis stations</pre>\r\n<pre>&#9;&#9;{ \"Active\": true, \"Stations\": [ \"Davis-139365\" ], \"StartDate\": \"2024-05-01\", \"EndDate\": \"2024-06-01\" }</pre>\r\n<div style=\"font-weight:bold;\">12. ImportPWSProviderHistoric:</div>\r\n<pre>&#9;a) import historic data for provider stations of PWS</pre>\r\n<pre>&#9;&#9;{ \"Active\": true, \"Provider\": \"msc\", \"Stations\": null, \"StartDate\": \"2024-05-01\", \"EndDate\": \"2024-06-01\" }</pre>\r\n<div style=\"font-weight:bold;\">13. CountriesMissedRegion:</div>\r\n<pre>&#9;a) query countries that without region</pre>\r\n<pre>&#9;&#9;{ }</pre>\r\n<div style=\"font-weight:bold;\">14. RefreshRegionCountriesMapping:</div>\r\n<pre>&#9;a) refresh region countries mapping</pre>\r\n<pre>&#9;&#9;{ }</pre>",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JToken"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JToken"
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "Select file",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/LocationSearch/GenerateLocationObj": {
        "get": {
          "tags": [
            "LocationSearch"
          ],
          "summary": "get the collection of Locations by conditions.",
          "parameters": [
            {
              "name": "country",
              "in": "query",
              "description": "contains the country for which we need to query, separated by commas(,)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchText",
              "in": "query",
              "description": "the search text which we need to query",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchSource",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "enum": [
                  "DefaultService",
                  "Geonames"
                ],
                "type": "string"
              }
            },
            {
              "name": "media",
              "in": "query",
              "description": "media used for identification",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cultureCode",
              "in": "query",
              "description": "the culture code for which we need to query",
              "schema": {
                "type": "string",
                "default": "en-US"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/LocationSearch/GenerateLocationByCoordinate": {
        "get": {
          "tags": [
            "LocationSearch"
          ],
          "summary": "get location info by coordinate",
          "parameters": [
            {
              "name": "latitude",
              "in": "query",
              "description": "the number of the latitude",
              "required": true,
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "the number of the longitude",
              "required": true,
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "media",
              "in": "query",
              "description": "media used for identification",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/LocationSearch/GetLocationByNameOrCoordinate": {
        "get": {
          "tags": [
            "LocationSearch"
          ],
          "summary": "text of search name or corrdinate: lng,lat or name,countrycodes1;countrycodes2  exp:  london  or  120,30 or london,GB;AU",
          "parameters": [
            {
              "name": "searchText",
              "in": "query",
              "description": "",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          }
        }
      },
      "/api/Quantis/GetNozzleColor": {
        "post": {
          "tags": [
            "Quantis"
          ],
          "summary": "To get weather Nozzle Color",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "crop",
                    "endDate",
                    "latitude",
                    "longitude",
                    "startDate"
                  ],
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "string"
                    },
                    "longitude": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "crop": {
                      "type": "string"
                    }
                  }
                },
                "encoding": {
                  "latitude": {
                    "style": "form"
                  },
                  "longitude": {
                    "style": "form"
                  },
                  "startDate": {
                    "style": "form"
                  },
                  "endDate": {
                    "style": "form"
                  },
                  "crop": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NozzleColor"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NozzleColor"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NozzleColor"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NozzleColor"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NozzleColor"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Quantis/GetWeatherByDate": {
        "post": {
          "tags": [
            "Quantis"
          ],
          "summary": "Get forcast data",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "endDate",
                    "lat",
                    "lon",
                    "startDate"
                  ],
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "number",
                      "format": "double"
                    },
                    "lon": {
                      "type": "number",
                      "format": "double"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    }
                  }
                },
                "encoding": {
                  "lat": {
                    "style": "form"
                  },
                  "lon": {
                    "style": "form"
                  },
                  "startDate": {
                    "style": "form"
                  },
                  "endDate": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error"
            },
            "405": {
              "description": "Method Not Allowed",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Quantis/GetWeatherByDays": {
        "post": {
          "tags": [
            "Quantis"
          ],
          "summary": "Get forcast data",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "lat",
                    "lon",
                    "showDays"
                  ],
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "number",
                      "format": "double"
                    },
                    "lon": {
                      "type": "number",
                      "format": "double"
                    },
                    "showDays": {
                      "type": "integer",
                      "format": "int32",
                      "default": 5
                    }
                  }
                },
                "encoding": {
                  "lat": {
                    "style": "form"
                  },
                  "lon": {
                    "style": "form"
                  },
                  "showDays": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/WeatherViewModel"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error"
            },
            "405": {
              "description": "Method Not Allowed",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ProblemDetails"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Quantis/GetCurrentDate": {
        "post": {
          "tags": [
            "Quantis"
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "latitude",
                    "longitude"
                  ],
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                },
                "encoding": {
                  "latitude": {
                    "style": "form"
                  },
                  "longitude": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Quantis/Test_GetDayHourlyTemperature": {
        "post": {
          "tags": [
            "Quantis"
          ],
          "summary": "this function for nozzle color logic test to see hourly data",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "crop",
                    "endDate",
                    "latitude",
                    "longitude",
                    "startDate"
                  ],
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "string"
                    },
                    "longitude": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string"
                    },
                    "endDate": {
                      "type": "string"
                    },
                    "crop": {
                      "type": "string"
                    }
                  }
                },
                "encoding": {
                  "latitude": {
                    "style": "form"
                  },
                  "longitude": {
                    "style": "form"
                  },
                  "startDate": {
                    "style": "form"
                  },
                  "endDate": {
                    "style": "form"
                  },
                  "crop": {
                    "style": "form"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/Quantis/Test_GetHeatStressTemperature": {
        "get": {
          "tags": [
            "Quantis"
          ],
          "summary": "Get heat stress temperature data",
          "parameters": [
            {
              "name": "latitude",
              "in": "query",
              "description": "latitude",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "description": "longitude",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "startDate",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "endDate",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "criticalTemp",
              "in": "query",
              "description": "critical temp",
              "required": true,
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "criticalHours",
              "in": "query",
              "description": "critical hours",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "redLineTemp",
              "in": "query",
              "description": "red line temp",
              "required": true,
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "heatEventDays",
              "in": "query",
              "description": "heat event days",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DayHourlyTemperature"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/QuantisV2/GetHeatStress": {
        "get": {
          "tags": [
            "QuantisV2"
          ],
          "summary": "Get heat stress",
          "parameters": [
            {
              "name": "coordinates",
              "in": "query",
              "description": "geometrycollection(point(lng lat), point(lng lat)) Or point(lng lat) exp：geometrycollection(point(7 42), point(120 30)) or point(7 42)",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "startDate",
              "in": "query",
              "description": "YYYY-MM-DD  exp:2023-03-01",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "endDate",
              "in": "query",
              "description": "YYYY-MM-DD exp:2023-03-10",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "criticalTemp",
              "in": "query",
              "description": "critical temp value . exp:23",
              "required": true,
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "criticalHours",
              "in": "query",
              "description": "critical hours sum. exp: 4",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "redLineTemp",
              "in": "query",
              "description": "red line temp value. exp:30",
              "required": true,
              "schema": {
                "type": "number",
                "format": "double"
              }
            },
            {
              "name": "heatEventDays",
              "in": "query",
              "description": "defined heat event days. exp:3",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/HeatStress"
                    }
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/HeatStress"
                    }
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/HeatStress"
                    }
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/HeatStress"
                    }
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/HeatStress"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/SoilAnalysis/GetSearchSoil": {
        "post": {
          "tags": [
            "SoilAnalysis"
          ],
          "summary": "combime GetSoilLayers GetSoilProfileDetail FetchanalysisDetail GetSoilAnalyses GetSoilProfiles \r\nSearchProfileByCoordinatesForTableView SearchProfileByPolygonForTableView SearchProfilesByAreas\r\nSearchProfilesByCoordinates SearchProfilesByPolygon SearchProfileByAreasForTableView into one function",
          "requestBody": {
            "description": "request model",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/SetSearchSoil"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetSearchSoil"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetSearchSoil"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/SetSearchSoil"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SetSearchSoil"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SetSearchSoil"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/SetSearchSoil"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SetSearchSoil"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSearchReturn"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSearchReturn"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSearchReturn"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                }
              }
            }
          }
        }
      },
      "/api/SoilAnalysis/AddEditSoil": {
        "post": {
          "tags": [
            "SoilAnalysis"
          ],
          "summary": "Soil search - search profiles by locations/coordinates for table view",
          "parameters": [
            {
              "name": "countryUrl",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "elevationUrl",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userName",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userID",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "token",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "result",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "firstName",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lastName",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "userRole",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "email",
              "in": "query",
              "description": "",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/SoilAddEdit"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoilAddEdit"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoilAddEdit"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/SoilAddEdit"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SoilAddEdit"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SoilAddEdit"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/SoilAddEdit"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SoilAddEdit"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "boolean"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "boolean"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "boolean"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "boolean"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "boolean"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                }
              }
            },
            "203": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/json": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/xml": {
                  "schema": {
                    "type": "string"
                  }
                },
                "text/xml": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "/api/SoilAnalysis/DeleteALP": {
        "post": {
          "tags": [
            "SoilAnalysis"
          ],
          "summary": "delete analyses Layers Profiles",
          "requestBody": {
            "description": "analyses Layers Profiles ids (1,2,3,4,5)",
            "content": {
              "application/json-patch+json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesLayersProfiles"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesLayersProfiles"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesLayersProfiles"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesLayersProfiles"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesLayersProfiles"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesLayersProfiles"
                }
              },
              "application/*+xml": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesLayersProfiles"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesLayersProfiles"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                }
              }
            },
            "500": {
              "description": "Server Error",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                }
              }
            },
            "2000": {
              "description": "Success",
              "content": {
                "text/plain": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                },
                "text/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/ResponseMessage"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "AgriAlertExternalSubscriptionModel": {
          "type": "object",
          "properties": {
            "subscribeFromTemplateName": {
              "type": "string",
              "nullable": true
            },
            "subscriberEmail": {
              "type": "string",
              "nullable": true
            },
            "locationList": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AgriAlertLocationAddRequestModel"
              },
              "nullable": true
            },
            "subscriptionName": {
              "type": "string",
              "nullable": true
            },
            "timezoneOffset": {
              "type": "integer",
              "format": "int32"
            },
            "startDate": {
              "type": "string",
              "nullable": true
            },
            "endDate": {
              "type": "string",
              "nullable": true
            },
            "reportHour": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "reportAggregation": {
              "type": "string",
              "nullable": true
            },
            "reportWeek": {
              "type": "string",
              "nullable": true
            },
            "reportLanguageCode": {
              "type": "string",
              "nullable": true
            },
            "reportSubject": {
              "type": "string",
              "nullable": true
            },
            "reportMessage": {
              "type": "string",
              "nullable": true
            },
            "editableFooter": {
              "type": "string",
              "nullable": true
            },
            "unit": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AgriAlertLocationAddRequestModel": {
          "type": "object",
          "properties": {
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "lat": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "lng": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "toUserEmail": {
              "type": "string",
              "nullable": true
            },
            "fromEmail": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AnalysesLayersProfiles": {
          "type": "object",
          "properties": {
            "analysis": {
              "$ref": "#/components/schemas/DeleteAnalysis"
            },
            "layer": {
              "$ref": "#/components/schemas/DeleteLayer"
            },
            "profile": {
              "$ref": "#/components/schemas/DeleteProfile"
            }
          },
          "additionalProperties": false
        },
        "Analysis": {
          "type": "object",
          "properties": {
            "intSampleID": {
              "type": "integer",
              "format": "int32"
            },
            "strAnalysesIDs": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "requestedby": {
              "type": "string",
              "nullable": true
            },
            "analysedby": {
              "type": "string",
              "nullable": true
            },
            "strUserID": {
              "type": "string",
              "nullable": true
            },
            "contributor": {
              "type": "string",
              "nullable": true
            },
            "uploadDate": {
              "type": "string",
              "nullable": true
            },
            "strSearch": {
              "type": "string",
              "nullable": true
            },
            "sortCol": {
              "type": "string",
              "nullable": true
            },
            "order": {
              "type": "string",
              "nullable": true
            },
            "pageIndex": {
              "type": "integer",
              "format": "int32"
            },
            "pageSize": {
              "type": "integer",
              "format": "int32"
            },
            "strDate": {
              "type": "string",
              "nullable": true
            },
            "strStatus": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "AreaCoordinateRequestModel": {
          "type": "object",
          "properties": {
            "gids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "coordinates": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CoordinateModel"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ChartsDotDataModel": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "format": "date-time"
            },
            "value": {
              "type": "number",
              "format": "double"
            },
            "averageValue": {
              "type": "number",
              "format": "double"
            },
            "nightValue": {
              "type": "number",
              "format": "double"
            },
            "dayValue": {
              "type": "number",
              "format": "double"
            },
            "level": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "Coordinate": {
          "type": "object",
          "properties": {
            "locationName": {
              "type": "string",
              "nullable": true
            },
            "lat": {
              "type": "number",
              "format": "float"
            },
            "lng": {
              "type": "number",
              "format": "float"
            }
          },
          "additionalProperties": false
        },
        "CoordinateInfo": {
          "type": "object",
          "properties": {
            "areaIDs": {
              "type": "string",
              "nullable": true
            },
            "polygon": {
              "type": "string",
              "nullable": true
            },
            "searchRadius": {
              "type": "integer",
              "format": "int32"
            },
            "propertiesIDs": {
              "type": "string",
              "nullable": true
            },
            "isSplitByCountry": {
              "type": "boolean"
            },
            "strSearchCoordinates": {
              "type": "string",
              "nullable": true
            },
            "coordinates": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Coordinate"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "CoordinateModel": {
          "type": "object",
          "properties": {
            "longitude": {
              "type": "number",
              "format": "double"
            },
            "latitude": {
              "type": "number",
              "format": "double"
            }
          },
          "additionalProperties": false
        },
        "DataPayloadModel": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "nullable": true,
              "example": null
            },
            "datefrom": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "example": "20230501"
            },
            "dateto": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "example": "20230531"
            },
            "stations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "example": [
                "PT-36-7892",
                "PT-36-7819",
                "PT-36-7732",
                "PT-36-8764",
                "PT-36-7824"
              ]
            },
            "suppliers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "example": [
                "PairTree"
              ]
            },
            "variables": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "example": [
                "E_RELATIVE_HUMIDITY",
                "E_WIND_HEADING",
                "E_WIND_SPEED"
              ]
            },
            "frequencies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "example": [
                "daily_avg"
              ]
            },
            "areas": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PoliticalAreaModel"
              },
              "nullable": true,
              "example": [
                {
                  "region": "APAC"
                },
                {
                  "region": "NAFTA"
                }
              ]
            },
            "geometry": {
              "$ref": "#/components/schemas/GeoJsonObject"
            },
            "geometries": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GeoJsonObject"
              },
              "nullable": true
            },
            "sourceMetadata": {
              "$ref": "#/components/schemas/JToken"
            },
            "format": {
              "type": "string",
              "nullable": true,
              "example": "json"
            },
            "download": {
              "type": "boolean",
              "nullable": true,
              "example": false
            },
            "stationsOnly": {
              "type": "boolean",
              "nullable": true,
              "example": false
            }
          },
          "additionalProperties": false
        },
        "DayData": {
          "type": "object",
          "properties": {
            "date": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              },
              "nullable": true
            },
            "pictoCode": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "temperatureMax": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "temperatureMin": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "temperatureMean": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "feltTemperatureMax": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "feltTemperatureMin": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "windDirection": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "windDirectionLetter": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "readOnly": true
            },
            "precipitationProbability": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "rainspot": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "predictabilityClass": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "predictability": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "precipitation": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "snowfraction": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "seaLevelPressureMax": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "seaLevelPressureMin": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "seaLevelPressureMean": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "windSpeedMax": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "windSpeedMin": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "windSpeedMean": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "relativeHumidityMax": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "relativeHumidityMin": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "relativeHumidityMean": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "convectivePrecipitation": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "precipitationHours": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "humiditygreater90Hours": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "nozzleColor": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "DayHourlyTemperature": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "nullable": true
            },
            "hourlyTemperature": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "isHeatEvent": {
              "type": "integer",
              "format": "int32"
            },
            "hasTemperatureAboveDefinition": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "DeleteAnalysis": {
          "type": "object",
          "properties": {
            "strAnalysesIDs": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "DeleteLayer": {
          "type": "object",
          "properties": {
            "strLayerIDs": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "DeleteProfile": {
          "type": "object",
          "properties": {
            "strProfileIDs": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GeoJsonObject": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "properties": {
              "$ref": "#/components/schemas/GeoProperties"
            },
            "coordinates": {
              "$ref": "#/components/schemas/JToken"
            }
          },
          "additionalProperties": false
        },
        "GeoProperties": {
          "type": "object",
          "properties": {
            "radius": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "GetSearchReturn": {
          "type": "object",
          "properties": {
            "responseMessage": {
              "$ref": "#/components/schemas/ResponseMessage"
            }
          },
          "additionalProperties": false
        },
        "HeatStress": {
          "type": "object",
          "properties": {
            "latitude": {
              "type": "number",
              "format": "double"
            },
            "longitude": {
              "type": "number",
              "format": "double"
            },
            "date": {
              "type": "string",
              "nullable": true
            },
            "value": {
              "type": "string",
              "nullable": true
            },
            "modelID": {
              "type": "string",
              "nullable": true
            },
            "property": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "HourData": {
          "type": "object",
          "properties": {
            "time": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "temperatureSurface": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "pictoCode": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "temperature": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "feltTemperature": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "sealevelPressure": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              },
              "nullable": true
            },
            "windSpeed": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "gust": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "visibility": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "dewpointtemperature": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "relativeHumidity": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "totalCloudCover": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "sunShineTime": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "windDirection": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "windDirectionLetter": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "readOnly": true
            },
            "precipitation": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "snowFraction": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "showerProbability": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "thunderstormProbability": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "globalRadiation": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "par": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "lightIntensity": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "precipitationProbability": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "temperatureSpread": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "precipitationSpread": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "windpseedSpread": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            },
            "totalCloudCoverSpread": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "nullable": true
            },
            "soiltemperature0to10cm": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "soilmoisture0to10cm": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "referenceEvapotranspirationFao": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "leafWetnessProbability": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "vaporPressureDeficit": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              },
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "JToken": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/JToken"
          }
        },
        "LayerDetail": {
          "type": "object",
          "properties": {
            "layerID": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "layer": {
              "type": "string",
              "nullable": true
            },
            "rank": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "startDepth": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "endDepth": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "thickness": {
              "type": "string",
              "nullable": true
            },
            "method": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "LocationModel": {
          "type": "object",
          "properties": {
            "ga": {
              "type": "string",
              "nullable": true
            },
            "zone": {
              "type": "string",
              "nullable": true
            },
            "dept": {
              "type": "string",
              "nullable": true
            },
            "point": {
              "type": "string",
              "nullable": true
            },
            "pointId": {
              "type": "string",
              "nullable": true
            },
            "latitude": {
              "type": "string",
              "nullable": true
            },
            "longitude": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Metadata": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "nullable": true
            },
            "latitude": {
              "type": "number",
              "format": "double"
            },
            "longitude": {
              "type": "number",
              "format": "double"
            },
            "height": {
              "type": "integer",
              "format": "int32"
            },
            "timeZoneAbbrevation": {
              "type": "string",
              "nullable": true
            },
            "utcTimeOffSet": {
              "type": "number",
              "format": "double"
            },
            "modelRunUtc": {
              "type": "string",
              "nullable": true
            },
            "modelRunUpdatetimeUtc": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "MetadataPayloadModel": {
          "type": "object",
          "properties": {
            "query": {
              "type": "string",
              "nullable": true
            },
            "areas-filters": {
              "$ref": "#/components/schemas/PoliticalAreaInputModel"
            },
            "variables-filters": {
              "$ref": "#/components/schemas/ReadVariablesInputModel"
            }
          },
          "additionalProperties": false
        },
        "NozzleColor": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "nullable": true
            },
            "color": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PoliticalAreaInputModel": {
          "type": "object",
          "properties": {
            "areas": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PoliticalAreaModel"
              },
              "nullable": true
            },
            "limit": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PoliticalAreaModel": {
          "type": "object",
          "properties": {
            "region": {
              "type": "string",
              "nullable": true
            },
            "country": {
              "type": "string",
              "nullable": true
            },
            "state": {
              "type": "string",
              "nullable": true
            },
            "cityname": {
              "type": "string",
              "nullable": true
            },
            "placename": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PolygonRequestInputModel": {
          "type": "object",
          "properties": {
            "wkt": {
              "type": "string",
              "nullable": true
            },
            "method": {
              "type": "string",
              "nullable": true
            },
            "supplier": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ProblemDetails": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "nullable": true
            },
            "title": {
              "type": "string",
              "nullable": true
            },
            "status": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "detail": {
              "type": "string",
              "nullable": true
            },
            "instance": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": { }
        },
        "Profile": {
          "type": "object",
          "properties": {
            "profileID": {
              "type": "integer",
              "format": "int32"
            },
            "profileCode": {
              "type": "string",
              "nullable": true
            },
            "searchString": {
              "type": "string",
              "nullable": true
            },
            "countryCode": {
              "type": "string",
              "nullable": true
            },
            "strType": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "PropertyMeasurementModel": {
          "type": "object",
          "properties": {
            "propMeasureId": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "propValue": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ReadVariablesInputModel": {
          "type": "object",
          "properties": {
            "supplier": {
              "type": "string",
              "nullable": true,
              "example": null
            },
            "variable": {
              "type": "string",
              "nullable": true,
              "example": null
            },
            "frequency": {
              "type": "string",
              "nullable": true,
              "example": null
            }
          },
          "additionalProperties": false
        },
        "RecommendationItem": {
          "type": "object",
          "properties": {
            "Longitude": {
              "type": "number",
              "format": "double"
            },
            "Latitude": {
              "type": "number",
              "format": "double"
            },
            "Country": {
              "type": "string",
              "nullable": true
            },
            "Variable": {
              "type": "string",
              "nullable": true
            },
            "RecommendedDataset": {
              "type": "string",
              "nullable": true
            },
            "Lag of RecommendedDataset (days)": {
              "type": "integer",
              "format": "int32"
            },
            "RecommendedDataset without Lag": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "ResponseMessage": {
          "type": "object",
          "properties": {
            "status": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Sample": {
          "type": "object",
          "properties": {
            "sampleid": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "sampleDate": {
              "type": "string",
              "nullable": true
            },
            "sampleDepth": {
              "type": "integer",
              "format": "int32"
            },
            "sampleEndDepth": {
              "type": "integer",
              "format": "int32"
            },
            "sampleInternalID": {
              "type": "string",
              "nullable": true
            },
            "sampleExternalRef": {
              "type": "string",
              "nullable": true
            },
            "sampleStatusID": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "SetSearchSoil": {
          "type": "object",
          "properties": {
            "isForTableView": {
              "type": "boolean"
            },
            "isAnalysis": {
              "type": "boolean"
            },
            "analysis": {
              "$ref": "#/components/schemas/Analysis"
            },
            "profile": {
              "$ref": "#/components/schemas/Profile"
            },
            "coordinate": {
              "$ref": "#/components/schemas/CoordinateInfo"
            }
          },
          "additionalProperties": false
        },
        "SoilAddEdit": {
          "type": "object",
          "properties": {
            "addEditFlag": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "analysis": {
              "$ref": "#/components/schemas/SoilAddEditAnalysis"
            },
            "profile": {
              "$ref": "#/components/schemas/SoilAddEditProfile"
            },
            "sample": {
              "$ref": "#/components/schemas/Sample"
            }
          },
          "additionalProperties": false
        },
        "SoilAddEditAnalysis": {
          "type": "object",
          "properties": {
            "layerid": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "requestedby": {
              "type": "string",
              "nullable": true
            },
            "analysedby": {
              "type": "string",
              "nullable": true
            },
            "userID": {
              "type": "string",
              "nullable": true
            },
            "contributor": {
              "type": "string",
              "nullable": true
            },
            "propertyMeasurements": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PropertyMeasurementModel"
              },
              "nullable": true
            },
            "uploadDate": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "SoilAddEditProfile": {
          "type": "object",
          "properties": {
            "profileid": {
              "type": "integer",
              "format": "int32"
            },
            "profileName": {
              "type": "string",
              "nullable": true
            },
            "profileDesc": {
              "type": "string",
              "nullable": true
            },
            "lat": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "lng": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "fieldType": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "publisher": {
              "type": "string",
              "nullable": true
            },
            "contributor": {
              "type": "string",
              "nullable": true
            },
            "layerDetails": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LayerDetail"
              },
              "nullable": true
            },
            "isStandard": {
              "type": "boolean",
              "nullable": true
            },
            "extrefID": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "extObject": {
              "type": "string",
              "nullable": true
            },
            "placeName": {
              "type": "string",
              "nullable": true
            },
            "countryCode": {
              "type": "string",
              "nullable": true
            },
            "adminName1": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "Units": {
          "type": "object",
          "properties": {
            "time": {
              "type": "string",
              "nullable": true
            },
            "par": {
              "type": "string",
              "nullable": true
            },
            "ppfd": {
              "type": "string",
              "nullable": true
            },
            "dayLightIntegral": {
              "type": "string",
              "nullable": true
            },
            "predictability": {
              "type": "string",
              "nullable": true
            },
            "precipitationProbability": {
              "type": "string",
              "nullable": true
            },
            "sunShineTime": {
              "type": "string",
              "nullable": true
            },
            "pressure": {
              "type": "string",
              "nullable": true
            },
            "cloudCover": {
              "type": "string",
              "nullable": true
            },
            "visibility": {
              "type": "string",
              "nullable": true
            },
            "relativehumidity": {
              "type": "string",
              "nullable": true
            },
            "soilmoisture": {
              "type": "string",
              "nullable": true
            },
            "co": {
              "type": "string",
              "nullable": true
            },
            "temperature": {
              "type": "string",
              "nullable": true
            },
            "winddirection": {
              "type": "string",
              "nullable": true
            },
            "precipitation": {
              "type": "string",
              "nullable": true
            },
            "windspeed": {
              "type": "string",
              "nullable": true
            },
            "transpiration": {
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false
        },
        "WeatherViewModel": {
          "type": "object",
          "properties": {
            "metadata": {
              "$ref": "#/components/schemas/Metadata"
            },
            "units": {
              "$ref": "#/components/schemas/Units"
            },
            "dataDay": {
              "$ref": "#/components/schemas/DayData"
            },
            "dataPerHour": {
              "$ref": "#/components/schemas/HourData"
            }
          },
          "additionalProperties": false
        }
      },
      "securitySchemes": {
        "Bearer": {
          "type": "apiKey",
          "description": "Authorization format : Bearer {token}",
          "name": "Authorization",
          "in": "header"
        },
        "APIKeySupport": {
          "type": "apiKey",
          "description": "Validate APIKey in header,",
          "name": "ApiKey",
          "in": "header"
        }
      }
    },
    "security": [
      {
        "Bearer": [ ]
      },
      {
        "APIKeySupport": [ ]
      }
    ],
    "tags": [
      {
        "name": "AgronomicsDecisionRecommendation",
        "description": "agronomics decision recommendation controllers"
      },
      {
        "name": "Alert",
        "description": "alert controller"
      },
      {
        "name": "Authorized",
        "description": "authorized controller"
      },
      {
        "name": "Common",
        "description": "common controller"
      },
      {
        "name": "Cryptography",
        "description": "cryptography controller"
      },
      {
        "name": "DiseaseRisk",
        "description": "disease risk controller for all diseases"
      },
      {
        "name": "Forecast",
        "description": "forecast controller"
      },
      {
        "name": "GenericRecommendation",
        "description": "generic recommendation controller"
      },
      {
        "name": "HyperLocalWeather",
        "description": "Hyper Local Weather Controller"
      },
      {
        "name": "LocationSearch",
        "description": "location search controller"
      },
      {
        "name": "Quantis",
        "description": "QuantisController"
      },
      {
        "name": "QuantisV2",
        "description": "QuantisController"
      },
      {
        "name": "SoilAnalysis",
        "description": "SoilAnalysisController"
      }
    ]
  }