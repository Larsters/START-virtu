
analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  errors:
    # allow self-reference to deprecated members (we do this because otherwise we have
    # to annotate every member in every test, assert, etc, when we deprecate something)
    deprecated_member_use_from_same_package: ignore
  exclude:
    - "bin/cache/**"
    # Ignore protoc generated files
    - "dev/conductor/lib/proto/*"

linter:
  rules:
    - always_declare_return_types
    - always_use_package_imports # we do this commonly
    - annotate_overrides
    - avoid_empty_else
    - avoid_init_to_null
    - avoid_print
    - avoid_relative_lib_imports
    - avoid_returning_null_for_void
    - avoid_unnecessary_containers
    - avoid_unused_constructor_parameters
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - prefer_const_constructors_in_immutables
    - prefer_single_quotes
    - prefer_final_fields
    - sized_box_for_whitespace
    - sort_child_properties_last
    - sort_pub_dependencies # prevents separating pinned transitive dependencies
    - unnecessary_await_in_return
    - unnecessary_breaks
    - unnecessary_const
    - unnecessary_constructor_name
    - unnecessary_getters_setters
    - unnecessary_late
    - unnecessary_new
    - unnecessary_null_checks
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_statements
    - unnecessary_string_interpolations
    - unnecessary_this
    - unreachable_from_main